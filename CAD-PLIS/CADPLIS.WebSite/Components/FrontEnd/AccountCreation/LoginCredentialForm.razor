<section id="loginCredentialForm">
    <div class="row formHeader my-3">
        <p>
            Please enter the your email to register your account
        </p>
    </div>
    <div class="row">
        <EditForm Model="model">
            <div id="userType" class="my-5">
                <h4>
                    User Type
                </h4>
                <h5>
                    Personal
                </h5>
            </div>
            <div id="loginIdDiv">
                <div class="form-group">
                    <label for="loginIdInput">Login ID *</label>
                    <input type="text" class="form-control" id="loginIdInput" @bind-value="model.LoginId" @onfocusout="validation">
                </div>
            </div>
            <div id="passwordDiv">
                <div class="form-group">
                    <label for="passwordInput">Password*</label>
                    <input type="password" class="form-control" id="passwordInput" @bind-value="model.Password" @onfocusout="validation">
                </div>
            </div>
            <div id="reEnterPasswordDiv">
                <div class="form-group">
                    <label for="reEnterPasswordInput">Re-enter Password*</label>
                    <input type="password" class="form-control" id="reEnterPasswordInput" @bind-value="model.RePassword" @onfocusout="validation">
                </div>
            </div>
            <div id="nextBtnDiv">
                <button class="btn btn-primary w-100 @(isValid ? "" : "disabled")" id="nextBtn" @onclick="OnNextBtnClicked">Next</button>
            </div>
        </EditForm>
    </div>
</section>

<style>
    .formHeader {
        font-size: small;
        font-weight: bold;
    }

    #userType h4 {
        color: #2E4161;
        font-weight: bold;
    }

    #userType h5 {
        color: #909AAD;
    }

    #nextBtnDiv #nextBtn {
        background-color: #2E4161;
    }

        #nextBtnDiv #nextBtn.disabled {
            background-color: #84ABCA;
            color: #FFF;
        }
</style>

@code {
    [Parameter]
    public Action OnPrevActionClicked { get; set; }
    [Parameter]
    public Action OnNextActionClicked { get; set; }
    private bool isValid { get; set; } = false;
    private LoginCredentialFormModel model { get; set; } = new LoginCredentialFormModel();

    private void validation()
    {
        isValid = false;
        if (!String.IsNullOrEmpty(model.LoginId) && !String.IsNullOrEmpty(model.Password) && !String.IsNullOrEmpty(model.RePassword) && model.Password == model.RePassword)
        {
            isValid = true;
        }
    }

    private void OnNextBtnClicked()
    {
        validation();
        Console.WriteLine("## OnNextBtnClicked: " + OnNextActionClicked == null + " // " + isValid);
        if (isValid)
        {
            OnNextActionClicked?.Invoke();
        }
    }
}
